@using ISP_ManagementSystemModel
@model IEnumerable<ISP_ManagementSystemModel.Models.CustomStockListSectionInformation>

@{
    ViewBag.Title = "Product Running List";
}

<style>
    .customDTWidth {
        padding: 0px;
    }

    input,
    select,
    textarea {
        max-width: 100%;
    }

    .btn-sm {
        padding: 3px 6px;
    }

    .changetrbackground {
        background-color: #DFFBF0;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    string Date = ISP_ManagementSystemModel.AppUtils.GetDateTimeNow().ToString("yyyy-MMM");

    @Html.AntiForgeryToken()

    <div class="panel panel-default">

        <div class="panel-heading" style="height: 45px;">
            <section class="content-header" style="padding: 5px 10px 0px 15px;">
                <h6 class="panel-title">Search By</h6>
                <ol class="breadcrumb" style="padding: 0px 5px; top: 5px;">
                    <li class="active"><a href="/Stock/AddStock"><i class="fa fa-dashboard"></i> Add Item</a></li>

                </ol>
            </section>
        </div>

        <div class="panel-body">
            <div class="form-group col-sm-12">
                <div>
                    @Html.Label("Item Name", null, new { @class = "control-label col-md-2", Style = "float:left" })
                    <div class="col-md-4" style="padding-left: 0px; float: left">
                        @Html.DropDownList("StockID", null, "-- Select Item --", new { @class = "form-control input-sm col-sm-11", @placeholder = " Select Item  " })
                    </div>
                    <div class="col-md-2" style="padding-left: 0px; float: left; margin-left: 20px;">
                        <input type="button" id="btnSearchItem" class="btn btn-sm btn-primary" value="Search" />
                    </div>
                    <div class="col-md-3"></div>
                </div>
            </div>
        </div>


        <div style="float: right; padding-bottom: 0px; margin-top: 30px; margin-right: 15px;">
            <input type="button" id="btnExportExcel" class="btn btn-sm btn-primary  btn-sm" value="Export Excel">
            <!-- export xl file -->
            @*<a class="btn btn-sm btn-primary" href="#">Export Excel</a>*@
        </div>
    </div>

    <div class="panel panel-default" style="margin-bottom: 0px">
        <div class="panel-heading">
            <h4 class="panel-title">Item List</h4> @*@Date*@

        </div>

        <div class="panel-body" style="overflow:auto">
            <table id="tblRunningList" class="table table-bordered table-hover table-responsive " style="align-content: center; width: 100%">
                <thead>
                    <tr>
                        <th style="padding:0px;" hidden="hidden"></th>
                        <th style="padding:0px;" hidden="hidden"></th>
                        <th style="padding:0px;" hidden="hidden"></th>
                        <th style="">Item Name</th>
                        <th style="padding:10px;">Warrenty Product</th>
                        <th style="">Brand</th>
                        <th style="">Serial</th>

                        @*<th>Client Login Name</th>*@
                        <th>Login_ID</th>
                        @*<th>Status Activate Date</th>*@
                        <th>Employee Name</th>
                        <th> Pop Name</th>
                        <th> Box Name</th>
                        <th style="padding: 10px;">Section</th>
                        <th style="padding:10px;">Status</th>
                        @*<th style="text-align: center; width: 5%">Action</th>*@
                    </tr>
                </thead>
                @*<tbody>
                        @foreach (var stockDetails in Model.lstStockDetails)
                        {
                            // var clientLoginName = if(stockDetails.)

                            //int stockDetailsID = stockDetails.StockDetailsID;

                            string Name = "";
                            string clientLoginName = "";
                            string employeeName = "";
                            string popName = "";
                            string boxName = "";
                            foreach (var item in Model.lstDistribution)
                            {
                                if (item.StockDetailsID == stockDetails.StockDetailsID)
                                {


                                    if (item.ClientDetails != null)
                                    {
                                        foreach (var vItem in (IEnumerable<ISP_ManagementSystemModel.Models.ClientSetByViewBag>)ViewData["lstTransaction"])
                                        {

                                            int clientDetailsIDFromDB = vItem.ClientDetailsID;
                                            //// int clientDetailsIDFromDB = @vItem.ClientDetailsID;
                                            if (@vItem.ClientDetailsID == item.ClientDetailsID)
                                            {
                                                Name = "<a href='#' onclick='GetClientDetailsByClientDetailsID(" + item.ClientDetailsID + "," + vItem.TransactionID + ")'>" + item.ClientDetails.Name + "</a>";
                                            }
                                        }
                                    }



                                    clientLoginName = (item.ClientDetails != null) ? item.ClientDetails.LoginName : "";
                                    employeeName = (item.Employee != null) ? item.Employee.Name : "";
                                    popName = (item.Pop != null) ? item.Pop.PopName : "";
                                    boxName = (item.Box != null) ? item.Box.BoxName : "";
                                }
                            }

                            <tr>
                                <td style="padding: 0px" hidden="hidden"><input type="hidden" id="" name="" value="@stockDetails.StockDetailsID" /></td>
                                <td style="padding: 0px" hidden="hidden"><input type="hidden" id="" name="" value="@stockDetails.SectionID" /></td>
                                <td style="padding: 0px" hidden="hidden"><input type="hidden" id="" name="" value="@stockDetails.ProductStatusID" /></td>
                                <td>@stockDetails.Stock.Item.ItemName</td>
                                <td>@stockDetails.Brand.BrandName</td>
                                <td>@stockDetails.Serial</td>
                                <td>@Html.Raw(Name)</td>
                                <td>@employeeName</td>
                                <td>@popName</td>
                                <td>@boxName</td>
                                <td>@stockDetails.Section.SectionName.ToString()</td>
                                <td>@stockDetails.ProductStatus.ProductStatusName</td>
                                @*<td align='center' style="padding: 8px 25px;">
                                        <div style="float: left">
                                            <button type="button" id="btnEditSectionProductStatus" class="btn btn-danger  btn-sm"><span class="glyphicon glyphicon-edit"></span></button>
                                        </div>
                                    </td>
                            </tr>
                        }
                    </tbody>*@
            </table>
        </div>
    </div>

    if (ISP_ManagementSystemModel.AppUtils.HasAccessInTheList(ISP_ManagementSystemModel.AppUtils.Change_Product_Status))
    {
        <div class="modal fade" id="mdlPopUp_Section_ProductStatus" role="dialog" style="overflow:auto" data-backdrop="static" data-keyboard="false">
            <div class="modal-dialog modal-lg" style="width:45%">
                <div class="modal-content">
                    <div class="modal-header">
                        <button id="btnPopUpUpdateSectionAndProductStatus" type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Change Section And Product Status </h4>
                    </div>
                    <div class="modal-body panel-body">
                        @Html.Partial("Partial_Section_ProductStatus")
                    </div>
                    <div class="modal-footer">
                        <div id="PopUp" style="float:right">
                            <input type="button" id="btnPopUpSectionAndProductStatusClose" value="Close" class="btn btn-default btn-sm" />
                            <input type="button" id="btnUpdateSectionAndProductStatus" value="Update Previous Item Information" class="btn btn-primary btn-sm" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="modal fade" id="tblEmployeeDetails" role="dialog" style="overflow: hidden; overflow-y: scroll;" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-lg" style="width: 65%;margin-bottom:5px;">
            <div class="modal-content">
                <div class="modal-header">
                    <button id="closeTblEmployeeDetails" type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Update Client Information</h4>
                </div>
                <div class="modal-body panel-body">
                    @Html.Partial("Partial_SpecificCLientDetails")
                </div>
                @if ((bool)HttpContext.Current.Session["MikrotikOptionEnable"])
                {
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h6 class="panel-title">Mikrotik</h6>
                        </div>

                        <div class="panel-body">
                            <div class="form-group col-sm-1"></div>
                            <div class="form-group col-sm-6">
                                <div>
                                    @Html.Label("MIkrotik", new { @class = "control-label col-md-0", Style = "float:left" })
                                    <span class="required_field col-md-0" style="padding-left: 5px"> *</span>
                                </div>
                                <div style="clear: both"> </div>
                                <div class="col-md-11" style="padding-left: 0px;">
                                    @Html.DropDownList("lstMikrotik", null, "--Select Mikrotik--", new { @class = "form-control input-sm col-sm-11", @placeholder = " Select Mikrotik " })
                                </div>
                            </div>
                            <div class="form-group col-sm-5">
                                <div>
                                    @Html.Label("IP", new { @class = "control-label col-md-0", Style = "float:left" })
                                    @*<span class="required_field col-md-0" style="padding-left: 5px"> *</span>*@
                                </div>
                                <div style="clear: both"> </div>
                                <div class="col-md-11" style="padding-left: 0px;">
                                    @Html.TextBox("IP", null, new { @class = "form-control input-sm col-sm-11", @placeholder = " 131.33.14.35 " })
                                </div>
                            </div>
                            <div class="form-group col-sm-1"></div>
                            <div class="form-group col-sm-6">
                                <div>
                                    @Html.Label("Mac", new { @class = "control-label col-md-0", Style = "float:left" })
                                    @*<span class="required_field col-md-0" style="padding-left: 5px"> *</span>*@
                                </div>
                                <div style="clear: both"> </div>
                                <div class="col-md-11" style="padding-left: 0px;">
                                    @Html.TextBox("Mac", null, new { @class = "form-control input-sm col-sm-11", @placeholder = " 01:1e:ed:34:45:89 " })
                                </div>
                            </div>
                        </div>

                    </div>
                }
                <div class="modal-footer">
                    @*<button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>*@
                    <div id="PopUpClientUpdate" style="float: right">
                        <input type="button" id="btnPopUpClientUpdateClose" value="Close" class="btn btn-default btn-sm" />
                        @if (ISP_ManagementSystemModel.AppUtils.IsGranted(ISP_ManagementSystemModel.AppUtils.Update_Client))
                        {
                            <input type="button" id="btnUpdateClientDetails" value="Update Client Information" class="btn btn-primary btn-sm" />
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="popModalForDeletePermently" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    Confirm Submit
                </div>
                <div class="modal-body">
                    Are you sure you want to Delete This Employee Permently?
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <a href="#" id="btnEmployeeDeletePermently" class="btn btn-success success">Delete Employee</a>
                </div>
            </div>
        </div>
    </div>

}

<script src="~/Scripts/CustomScripts/ProductCurrentStatusManager.js"></script>
<script src="~/Scripts/CustomScripts/ClientUpdataeFromSeveralPageManager.js"></script>
<script src="~/Scripts/CustomScripts/ClientUpdateManager.js"></script>
<script>

    var pageID = '@ISP_ManagementSystemModel.AppUtils.View_Product_running_List';

    var StockDetailsID;
    var SectionID;
    var ProductStatusID;
    var _InformationUpdateForWhichPage = "runninglist";
    var _tblName = "tblRunningList";
    var _rowIndex = "";


    var T_ID;
    var T_DuePayment_ID;
    var _ClientName;
    var _ClientLoginName;
    var tableRowIndexForUpdateClientName;

    function GetClientDetailsByClientDetailsID(clientDetailsID, t_ID) {

        T_ID = t_ID;
        //ClientUpdataeFromSeveralPageManager.GetClientDetailsByID(clientDetailsID);
        ClientUpdateManager.GetClientDetailsByID(clientDetailsID);
    }

    $(document).ready(function () {


        $("#"+_tblName+"").on("click", "tr", function (e) {
            tableRowIndexForUpdateClientName = $(this).index();
            _rowIndex = $(this).index();
        });
        var table = $("#tblRunningList").DataTable
        ({
            "language":
            {
                "processing": "<div class='overlay custom-loader-background'><i class='fa fa-cog fa-spin custom-loader-color'></i></div>"
            },
            "processing": true,
            "serverSide": true,


            "ajax":
            {
                "url": "/ProductCurrentStatus/CustomStockRunningSectionInformation",
                "type": "POST",
                "dataType": "JSON",
                data: function (d) {
                    d.StockID = $("#StockID").val();
                    d.__RequestVerificationToken = $('[name=__RequestVerificationToken]').val();
                }
            },
            //https://stackoverflow.com/questions/11256864/jquery-datatables-actionlink-how-to-add
            "columnDefs": [
                { "targets": [3], "width": "20%" },
               // { "width": "5%", "targets": [6] },
                { "targets": [0], "data": "StockDetailsID", "render": function (data, type, row, meta) { return '<td hidden><input type="hidden" id="StockDetailsID" name="StockDetailsID" value=' + row.StockDetailsID + ' /></td>' } },
                { "targets": [1], "data": "SectionID", "render": function (data, type, row, meta) { return '<td hidden><input type="hidden" id="SectionID" name="SectionID" value=' + row.SectionID + ' /></td>' } },
                { "targets": [2], "data": "ProductStatusID", "render": function (data, type, row, meta) { return '<td hidden><input type="hidden" id="ProductStatusID" name="ProductStatusID" value=' + row.ProductStatusID + ' /></td>' } },
                { "targets": [7], "data": "ClientName", "render": function (data, type, row, meta) { return row.ClientDetailsID !== "" ? ' <a href="#" onclick="GetClientDetailsByClientDetailsID(' + row.ClientDetailsID + ',' + row.TransactionID + ')">' + row.ClientLoginName + '</a>' : "" } },

                //{ "targets": [8], "orderable": false, "data": "Show", "render": function (data, type, row, meta) { return row.LineStatusActiveDate } },
                { "targets": [9], "data": "ChangeSectionPermission", "render": function (data, type, row, meta) { return row.ChangeSectionPermission === true ? ' <button type="button" id="btnEditSectionProductStatus" class="btn btn-danger  btn-sm"><span class="glyphicon glyphicon-edit"></span></button> ' : "" } }

            ],
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                //console.log(nRow);

                if (aData.IsPriorityClient) {
                    $(nRow).removeClass('odd');
                    $(nRow).addClass('changetrbackground');
                }
                else {
                    //$(nRow).removeClass('changetrbackground');
                    $(nRow).removeClass('changetrbackground');
                }
                $(nRow).find("td:eq(0)").attr("hidden", true);
                $(nRow).find("td:eq(1)").attr("hidden", true);
                $(nRow).find("td:eq(2)").attr("hidden", true);
                $(nRow).find("td:eq(7)").css("color", "darkblue");
                $(nRow).find("td:eq(8)").css("padding", "8px 25px");
                return nRow;
            },

            "columns": [
                {
                    "data": ""
                },
                {
                    "data": ""
                },
                {
                    "data": ""
                },
                {
                    "data": "ItemName"
                },
                {
                    "data": "WarrentyProduct"
                },
                {
                    "data": "BrandName"
                },
                {
                    "data": "Serial"
                },
                {
                    "data": ""
                },
                //{
                //    "data": ""
                //},
                {
                    "data": "EmployeeName"
                },
                {
                    "data": "PopName"
                },
                {
                    "data": "BoxName"
                },
                {
                    "data": "SectionName"
                },
                {
                    "data": "ProductStatusName"
                }
            ]
        });


        $("#btnPopUpClientUpdateClose").click(function () {
            $("#chkStatusFromRunningMonth").prop("checked", false);
            $("#chkPackageFromRunningMonth").prop("checked", false);
            $("#tblEmployeeDetails").modal("hide");
        });


        //$('#tblRunningList').find('tr').click(function () {
        //
        //    tableRowIndexForUpdateClientName = $(this).index();
        //});

        $('#popsConnectionDate').datepicker({
            dateFormat: 'mm/dd/yy',
            numberOfMonths: 1,
            changeMonth: true,
            changeYear: true
        });
        //$('#popsBillPaymentDate').datepicker({
        //    dateFormat: 'mm/dd/yy',
        //    numberOfMonths: 1,
        //    changeMonth: true,
        //    changeYear: true
        //});


        $("#PopUpClientUpdate").on("click", "#btnUpdateClientDetails", function () {

            if (ClientUpdateManager.UpdateClientDetailsValidation() === true) {
                @if ((bool)HttpContext.Current.Session["MikrotikOptionEnable"])
                {
                    <text>

                        console.log($("#lstMikrotik").val());
                        if ($("#lstMikrotik").val() === '' || $("#lstMikrotik").val() === null) {
                            AppUtil.ShowSuccess("Please Insert Mikrotik Information.");
                            return false;
                        }
                        //if (AppUtil.GetIdValue("IP") === '') {
                        //    AppUtil.ShowSuccess("Please Insert IP.");
                        //    return false;
                        //}
                        //if (AppUtil.GetIdValue("Mac") === '') {
                        //    AppUtil.ShowSuccess("Please Insert Mac.");
                        //    return false;
                        //}
                    </text>
                  // <script></script>

                }
                ClientUpdateManager.UpdateClientDetails();
            }

        });

        $("#chkPackageFromRunningMonth").change(function () {

            if ($(this).is(":checked")) {
                $("#chkStatusFromRunningMonth").prop("checked", false);
            }
        });

        $("#chkStatusFromRunningMonth").change(function () {

            if ($(this).is(":checked")) {
                $("#chkPackageFromRunningMonth").prop("checked", false);
            }
        });


        $("#tblRunningList").on("click", "#btnEditSectionProductStatus", function () {

            StockDetailsID = $(this).closest("tr").find("td:eq(0) input").val();
            SectionID = $(this).closest("tr").find("td:eq(1) input").val();
            ProductStatusID = $(this).closest("tr").find("td:eq(2) input").val();


            $("#mdlPopUp_Section_ProductStatus").modal("show");
            // ProductCurrentStatusManager.DeleteStockItem(StockDetailsID);
        });
        $("#btnSearchItem").click(function () {

            if (ProductCurrentStatusManager.ValidationOnlySearch() === true) {
                //var StockID = $("#StockID").val();
                //ProductCurrentStatusManager.SearchStockDetailsListByStockIDForRunning(StockID);
                table.draw();
            }

        });

        $("#lstSectionID").change(function () {

            var SectionID = $("#lstSectionID").val();
            ProductCurrentStatusManager.GetProductStatusBySectionID(SectionID);
        });

        $("#btnPopUpUpdateSectionAndProductStatus,#btnPopUpSectionAndProductStatusClose").click(function () {

            ProductCurrentStatusManager.resetPopUpSectinoAndProductStatus();
            SectionID = "";
            ProductStatusID = "";
            StockDetailsID = '';
            $("#mdlPopUp_Section_ProductStatus").modal("hide");
        });

        $("#btnUpdateSectionAndProductStatus").click(function () {

            var NewSectionID = $("#lstSectionID").val();
            var NewProductStatusID = $("#lstProductStatusID").val();
            ProductCurrentStatusManager.ChangeProductStatusAndSection(StockDetailsID, NewSectionID, NewProductStatusID);

            $("#mdlPopUp_Section_ProductStatus").modal("hide");
        });

        $("#btnExportExcel").click(function () {
            ProductCurrentStatusManager.PrintProductByWorkingStatus(0);
        });

        $("#closeTblEmployeeDetails").click(function () {
            //ClientDetailsManager.ClearClientDetailsModalInformation();
            $("#chkStatusFromRunningMonth").prop("checked", false);
            $("#chkPackageFromRunningMonth").prop("checked", false);
            $("#Status").css("display", "none");
        });

        $('#PopsLineStatusActiveDate').datepicker({
            dateFormat: 'mm/dd/yy',
            numberOfMonths: 1,
            changeMonth: true,
            changeYear: true
        });

        $("#ContactNumber").keyup(function () {
            var mob = $("#ContactNumber").val();
            $("#SMSCommunication").val(mob);
        });

    });

</script>