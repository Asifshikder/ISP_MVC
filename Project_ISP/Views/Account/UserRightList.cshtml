@model IEnumerable<ISP_ManagementSystemModel.Models.ClientUserPermission>
<style>
    .modal-backdrop {
        background: transparent;
    }

    .customDTWidth {
        padding: 0px;
    }

    .btn-sm1 {
        padding: 3px 25px;
    }
    .btn-sm {
        padding: 2px 4px;
    }
</style>

@*<link rel="stylesheet" href="http://cdn.datatables.net/1.10.2/css/jquery.dataTables.min.css">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<script type="text/javascript" src="http://cdn.datatables.net/1.10.2/js/jquery.dataTables.min.js"></script>*@

<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
<script src="~/Scripts/CustomScripts/AccountManager.js"></script>

<script>
    var saveinDB = true;
    var userRightPermissionID = "";
    var employeeStatus;
    $(function () {
        $('#toggle-two').bootstrapToggle({
            on: 'Locked',
            off: 'Unlocked'
        });
    })
    $("document").ready(function () {

        $("#tblUserRightList").on("click", "tr", function () {
              
             userRightPermissionID = $(this).closest("tr").find("td:eq(0) input").val();
        });

        $("#btnDeleteUserRightPermently").click(function () {
            AccountManager.DeleteUserRightPermissionByID(userRightPermissionID);
            $("#popModalForDeleteUserRightPermently").modal("hide");
        });

        $("#tblUserRightList").DataTable();

        $("#chkEployeeLockOrActiveTemporary").click(function () {
              
            if (AccountManager.ValidationForLockOrActiveOrDeleteEmployee()) {
                var employeeID = $("#lstEmployeeID").val();
                if (employeeStatus == 1)
                {
                    AccountManager.UpdateEmployeeStatus(employeeID, 2);
                }
                else if (employeeStatus == 2) {
                    AccountManager.UpdateEmployeeStatus(employeeID, 1);
                }
                
            }
        });

        //$("#chkEployeeLockOrActiveTemporary").change(function () {
        //      
        //    if ($(this).prop("checked") === true) {
        //        if (AccountManager.ValidationForLockOrActiveOrDeleteEmployee()) {
        //            alert("a");
        //        }
        //        else {
        //            $('#chkEployeeLockOrActiveTemporary').bootstrapToggle('off');
        //            alert("b");
        //        }

        //        //if (confirm('Are you sure you want to Lock this Employee?')) {
        //        //    alert("Locked");
        //        //}
        //        //else {
        //        //    saveinDB = false;
        //        //    $('#chkEployeeLockOrActiveTemporary').bootstrapToggle('off')
        //        //}
        //    }
        //    else {
        //        if (AccountManager.ValidationForLockOrActiveOrDeleteEmployee()) {
        //            alert("c");
        //        }

        //        //saveinDB === true ? alert("Locked") : alert("Unlocked");
        //        //saveinDB = true;
        //    }
        //})

        $('#btnEmployeeDeletePermently').click(function () {
            /* when the submit button in the modal is clicked, submit the form */
            if (AccountManager.ValidationForLockOrActiveOrDeleteEmployee()) {
                var employeeID = $("#lstEmployeeID").val();
                AccountManager.DeletEmployeeByEmployeeID(employeeID);
            }
            else {
                $("#popModalForDeletePermently").modal("hide");
            }
           
        });

        $("#lstEmployeeID").change(function () {
              
            var lstEmployeeID = $("#lstEmployeeID").val();
            if (lstEmployeeID > 0) {
                AccountManager.GetEmployeeStatusByEmployeeID(lstEmployeeID);
            }
        });

        $("#btnAssignPermissionForEmployee").click(function () {

              
            var employeeID = $("#lstEmployeeIDForSetUserPermission").val();
            var userRightID = $("#UserRightID").val();
            if(AccountManager.AssignPermissionValidation())
            {
                AccountManager.SetPermissionForEmployee(employeeID, userRightID);
            }
        });
    });

</script>

@Html.AntiForgeryToken()
@using (Html.BeginForm())
{
    @*<input type="button" name="btn" value="Submit" id="submitBtn" data-toggle="modal" data-target="#popModal" class="btn btn-default" />*@

    @*<div class="modal fade" id="popModalForLockOrUnlock" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        Confirm Submit
                    </div>
                    <div class="modal-body">
                        Are you sure you want to Delete This Employee Permently?
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <a href="#" id="btnEmployeeLockTempOrPermanent" class="btn btn-success success">Delete Employee</a>
                    </div>
                </div>
            </div>
        </div>*@

    <div class="modal fade" id="popModalForDeletePermently" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    Confirm Submit
                </div>
                <div class="modal-body">
                    Are you sure you want to Delete This Employee Permently?
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <a href="#" id="btnEmployeeDeletePermently" class="btn btn-success success">Delete Employee</a>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="popModalForDeleteUserRightPermently" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    Confirm Submit
                </div>
                <div class="modal-body">
                    Are you sure you want to Delete This User Right Permently?
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <a href="#" id="btnDeleteUserRightPermently" class="btn btn-success success">Delete User Right Permanently</a>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">
            <h6 class="panel-title">Employee Status Change@*<a href="~/Account/UserRightPermission" style="float:right; font-weight:bold;" id="">New Permission Name</a>*@</h6>
        </div>
        <div class="panel-body">
            <div class="form-group col-sm-4">
                <div>
                    @Html.Label("Employee", new { @class = "control-label col-md-0", Style = "float:left" })
                    <span class="required_field col-md-0" style="padding-left: 5px"> *</span>
                </div>
                <div style="clear: both"> </div>
                <div class="col-md-11" style="padding-left: 0px;">
                    @Html.DropDownList("lstEmployeeID", null, "-- Select Employee --", new { @class = "form-control input-sm col-sm-11", @placeholder = " Zone " })
                </div>
            </div>
            <div class="form-group col-sm-2">
                <div>
                    @Html.Label("Lock/Unlock", new { @class = "control-label col-md-0", Style = "float:left" })
                </div>
                <div style="clear: both"> </div>
                <div class="col-md-11" style="padding-left: 0px;">
                    <input type="button" class="btn btn-primary btn-sm1" value="Lock" id="chkEployeeLockOrActiveTemporary"  />
                </div>
            </div>
            <div class="form-group col-sm-2">
                <div class="col-md-12">
                    @Html.Label("Delete Permently", new { @class = "control-label col-md-0", Style = "float:left" })
                    @*<span class="required_field col-md-0" style="padding-left: 5px"> *</span>*@
                </div>
                <div style="clear: both"> </div>
                <div class="col-md-11" style="text-align:center">
                    <button type='button' id='btnPermanentlyRemoveEmployee' class='btn btn-danger btn-sm' data-toggle="modal" data-target="#popModalForDeletePermently"><span class='glyphicon glyphicon-remove'></span></button>
                </div>
            </div>
            @*<div class="form-group col-sm-2" style="margin-top: 25px">
                <button id="btnSave" class="btn btn-default">btnSave</button>
            </div>*@
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">
            <h6 class="panel-title">Set User Right to Employee<a href="~/Account/UserRightPermission" style="float:right; font-weight:bold;" id=""> Create New Permission</a></h6>
        </div>

        <div class="panel-body">
            <div class="form-group col-sm-4">
                <div>
                    @Html.Label("Employee List", new { @class = "control-label col-md-0", Style = "float:left" })
                    <span class="required_field col-md-0" style="padding-left: 5px"> *</span>
                </div>
                <div style="clear: both"> </div>
                <div class="col-md-11" style="padding-left: 0px;">
                    @Html.DropDownList("lstEmployeeIDForSetUserPermission", null, "-- User Right --", new { @class = "form-control input-sm col-sm-11", @placeholder = " Zone " })
                </div>
            </div>
            <div class="form-group col-sm-4">
                <div>
                    @Html.Label("UserRight", new { @class = "control-label col-md-0", Style = "float:left" })
                    <span class="required_field col-md-0" style="padding-left: 5px"> *</span>
                </div>
                <div style="clear: both"> </div>
                <div class="col-md-11" style="padding-left: 0px;">
                    @Html.DropDownList("UserRightID", null, "-- User Right --", new { @class = "form-control input-sm col-sm-11", @placeholder = " Zone " })
                </div>
            </div>
            <div class="form-group col-sm-2" style="margin-top: 25px">
                <input type="button" id="btnAssignPermissionForEmployee" class="btn btn-default" value="Assign Pemission"/>
            </div>
        </div>
    </div>

        <div class="panel panel-default" style="margin-bottom: 0px">
            <div class="panel-heading">
                <h4 class="panel-title">User Permission List</h4>
            </div>
            <div class="panel-body">
                <table id="tblUserRightList" class="table table-striped table-bordered table-responsive">
                    <thead>
                        <tr>
                            <th hidden="hidden"></th>
                            <th>
                                @Html.DisplayName("User Permission Name List")
                            </th>
                            <th style="text-align:center">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                        <tr>
                            <td hidden="hidden">
                                @Html.HiddenFor(s => item.UserRightPermissionID)
                            </td>
                            <td>
                                @Html.ActionLink(@item.UserRightPermissionName, "UserRightPermission", "Account", new { UID = @item.UserRightPermissionID }, null)
                                @*<a href="~/Account/UserRightPermission?UID ='"++"'">@Html.DisplayFor(s => item.UserRightPermissionName)</a>*@
                            </td>
                            <td align="center">
                                <button type='button' id='btnDelete' class='btn btn-danger btn-sm' data-toggle="modal" data-target="#popModalForDeleteUserRightPermently"><span class='glyphicon glyphicon-remove'></span></button>
                            </td>
                        </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

}
