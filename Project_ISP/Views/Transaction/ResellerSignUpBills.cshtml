
@using ISP_ManagementSystemModel
@model IEnumerable<ISP_ManagementSystemModel.Models.CustomSignUpBills>

@{
    ViewBag.Title = "Show Current Month Bills";
}

<script src="~/Scripts/CustomScripts/UnpaidBillsManager.js"></script>
<script src="~/Scripts/CustomScripts/ClientUpdataeFromSeveralPageManager.js"></script>
<script src="~/Scripts/CustomScripts/ClientUpdateManager.js"></script>


<style>
    .customDTWidth {
        padding: 0px;
    }

    .btn-sm {
        padding: 3px 6px;
    }

    .changetrbackground {
        background-color: #DFFBF0;
    }

    .hover {
        background-color: #DFFBF0;
    }
</style>

<script>

    var T_ID;
    var T_DuePayment_ID;
    var _ClientName;
    var _ClientLoginName;
    var _InformationUpdateForWhichPage = "signupbill";
    var _tblName = "tblSignUpBills";
    var _rowIndex = "";
    function setCompleteStatus(TransactionID) {

        T_ID = TransactionID;
        $("#btnShowBillPaymentWindow").css("visibility", "visible");
    }

    function GetClientDetailsByClientDetailsID(clientDetailsID, t_ID) {
        // AppUtil.ShowSuccess(clientDetailsID);
        T_ID = t_ID;
        //ClientUpdataeFromSeveralPageManager.GetClientDetailsByID(clientDetailsID);
        ClientUpdateManager.GetClientDetailsByID(clientDetailsID);
    }

    $(document).ready(function() {

        $("#"+_tblName+"").on("click","tr", function () {
            _rowIndex = $(this).index();
        });

        var table = $("#tblSignUpBills").DataTable
        ({
            "language":
            {
                "processing": "<div class='overlay custom-loader-background'><i class='fa fa-cog fa-spin custom-loader-color'></i></div>"
            },
            "processing": true,
            "serverSide": true,


            "ajax":
            {
                "url": "/Transaction/GetResellerSignUpBillsAJAXData",
                "type": "POST",
                "dataType": "JSON",
                data: function (d) {
                    d.YearID = $("#YearID").val();
                    d.MonthID = $("#MonthID").val();
                    d.ZoneID = $("#SearchByZoneID").val();
                    d.__RequestVerificationToken = $('[name=__RequestVerificationToken]').val();
                }
            },
            //https://stackoverflow.com/questions/11256864/jquery-datatables-actionlink-how-to-add
            "columnDefs": [
                { "targets": [0], "width": "5%" },
                //{ "width": "5%", "targets": [6] },
                { "targets": [0], "data": "TransactionID", "render": function (data, type, row, meta) { return '<td hidden><input type="hidden" id="TransactionID" name="TransactionID" value=' + row.TransactionID + ' ></td>' } },
                { "targets": [1], "data": "Name", "render": function (data, type, row, meta) { return '<a href="#" onclick="GetClientDetailsByClientDetailsID(' + row.ClientDetailsID + ',' + row.TransactionID + ')">' + row.ClientLoginName + '</a>' } },
                { "targets": [8], "data": "PaymentDate", "render": function (data, type, row, meta) { return AppUtil.ParseDateTime(row.PaymentDate) } },
                //{ "targets": [16], "orderable": false, "data": "Show", "render": function (data, type, row, meta) { return row.LineStatusActiveDate } },

                //{ "targets": [9], "data": "Show", "render": function (data, type, row, meta) { return row.StatusThisMonthID == '3' ? "<div style='color: green; font-weight:bold'>Active</td>" : "<div style='color: red; font-weight:bold'>Lock</td>" } },
                //{ "targets": [10], "data": "Show", "render": function (data, type, row, meta) { return row.StatusNextMonthID == '5' ? "<div style='color: red; font-weight:bold'>Lock</td>" : "<div style='color: green; font-weight:bold'>Active</td>" } },
                //{ "targets": [11], "data": "Show", "render": function (data, type, row, meta) { return "<a href='#' id='ShowPopUps'>Edit</a>" } },
                //{ "targets": [12], "style": "align='center'", "data": "Action", "render": function (data, type, row, meta) { return row.Button === true ? ' <button id="btnDelete" type="button" class="btn btn-danger btn-sm padding" data-placement="top" data-toggle="modal" data-target="#popModalForDeletePermently"> <span class="glyphicon glyphicon-remove"></span> </button> ' : "" } }

            ],
                "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {

                    //.css("background-color", "#DFFBF0;")
                    if (aData.IsPriorityClient) {
                        $(nRow).removeClass('odd');
                        $(nRow).addClass('changetrbackground');
                    }
                    else {
                        //$(nRow).removeClass('changetrbackground');
                        $(nRow).removeClass('changetrbackground');
                    }

                //console.log(nRow);
                $(nRow).find("td:eq(0)").attr("hidden", true);
                $(nRow).find("td:eq(1)").css("color", "blue");
                return nRow;
            },

            "columns": [
                {
                    "data": "TransactionID"
                },
                {
                    "data": "Name"
                },
                {
                    "data": "Address"
                },
                {
                    "data": "ContactNumber"
                },
                {
                    "data": "ZoneName"
                },
                {
                    "data": "PackageName"
                },
                {
                    "data": "PackagePrice"
                },
                {
                    "data": "SignUpFee"
                },
                {
                    "data": "PaymentDate"
                },
                {
                    "data": "RemarksNo"
                },
                {
                    "data": "CreateRemarks"
                },
                {
                    "data": "Reference"
                },
                {
                    "data": "GivenCableDetails"
                },
                {
                    "data": "GivenItemsDetails"
                },
                {
                    "data": "CreateBy"
                },
                {
                    "data": "ItemInstalledEmployeeNameList"
                },
                //{
                //    "data": ""
                //}
            ]

            //        < th style="padding:10px;" > Remarks</th>
            //            <th style="padding:10px;">Reference</th>
            //            <th style="padding:10px;">Given Cable </th>
            //            <th style="padding:10px;">Given Items </th>
            //            <th style="padding:10px;">Who Create </th>
            //            <th style="padding:10px;">Who Assigned </th>
            ////Reference = s.TCon.ClientDetails.Reference,
            //                CreateBy = s.TCon.ClientDetails.CreateBy,
            //    GivenDetails = GetGivenDetails(s.TCon.ClientDetailsID),
            //    GivenCableDetails = (string)TempData["totalCableGivenList"],
            //    GivenItemsDetails = (string)TempData["totalItemGivenList"],
            //    ItemInstalledEmployeeNameList = (string)TempData["lstEmployeeForClient"]
        });


        $('#popsConnectionDate').datepicker({
            dateFormat: 'mm/dd/yy',
            numberOfMonths: 1,
            changeMonth: true,
            changeYear: true
        });
        //$('#popsBillPaymentDate').datepicker({
        //    dateFormat: 'mm/dd/yy',
        //    numberOfMonths: 1,
        //    changeMonth: true,
        //    changeYear: true
        //});


        $("#PopUpClientUpdate").on("click", "#btnUpdateClientDetails", function () {

            if (ClientUpdateManager.UpdateClientDetailsValidation() === true) {
                @if ((bool)HttpContext.Current.Session["MikrotikOptionEnable"])
                {
                    <text>

                        console.log($("#lstMikrotik").val());
                        if ($("#lstMikrotik").val() === '' || $("#lstMikrotik").val() === null) {
                            AppUtil.ShowSuccess("Please Insert Mikrotik Information.");
                            return false;
                        }
                        //if (AppUtil.GetIdValue("IP") === '') {
                        //    AppUtil.ShowSuccess("Please Insert IP.");
                        //    return false;
                        //}
                        //if (AppUtil.GetIdValue("Mac") === '') {
                        //    AppUtil.ShowSuccess("Please Insert Mac.");
                        //    return false;
                        //}
                    </text>
                  // <script></script>

                }
                ClientUpdateManager.UpdateClientDetails();
            }

        });


        $("#chkPackageFromRunningMonth").change(function() {

            if ($(this).is(":checked")) {
                $("#chkStatusFromRunningMonth").prop("checked", false);
            }
        });

        $("#chkStatusFromRunningMonth").change(function() {

            if ($(this).is(":checked")) {
                $("#chkPackageFromRunningMonth").prop("checked", false);
            }
        });

        $("#btnGenerateBill").click(function() {
            UnpaidBillsManager.GenerateBillForThisMonth();
        });
        $("#btnShowBillPaymentWindow").click(function() {


            AppUtil.ShowSuccess(T_ID);

            UnpaidBillsManager.GetClientPaymentAmountAndRemarksAndSleepNoForPayment(T_ID);
        });

        //$("#btnShowBillPaymentWindow").click(function () {

        //
        //    AppUtil.ShowSuccess(T_ID);
        //
        //    UnpaidBillsManager.GetClientPaymentAmountAndRemarksAndSleepNoForPayment(T_ID);
        //});
        $("#btnShowDueBillPaymentWindow").click(function() {
            $("#tblShowDueBillsList>tbody>tr").each(function() {

                var rowIndex = $(this).index();
                $("#tblShowDueBillsList>tbody>tr>td>input[name=chkPayDueBills]:radio").each(function() {
                    if ($(this).is(":checked")) {
                        $(this).closest("tr").css("border", "1px solid red");
                    } else {
                        //$(this).attr("checked", false);
                        $(this).closest("tr").css("border", "0px solid red");
                    }
                });
            });

            AppUtil.ShowSuccess(T_DuePayment_ID);

            UnpaidBillsManager.GetClientPaymentAmountAndRemarksAndSleepNoForDuePayment(T_DuePayment_ID);
        });
        $("#btnAdjustDueBill").click(function() {
            UnpaidBillsManager.AdjustDueBill();
        });
        $("#btnPayBill").click(function() {

            UnpaidBillsManager.PayMonthlyBill(T_ID);
        });
        $("#btnPayUnpaidBill").click(function() {

            UnpaidBillsManager.PayDueBill(T_DuePayment_ID);
        });


        $("#tblSignUpBills").on('click',
            "#linkOfShowingDueAmount",
            function(e) {

                e.preventDefault();
                var transactionID = $(this).closest("tr").find("td:eq(1) input").val();
                AppUtil.ShowSuccess(transactionID);
                UnpaidBillsManager.ShowDueBillDetailssByTransactionID(transactionID);
            });

        $("#mdlShowDueBillsList").on("click",
            "#chkPayDueBills",
            function() {

                var transactionID = $(this).closest("tr").find("td:eq(0) input").val();
                AppUtil.ShowSuccess(transactionID);
            });

        //$('#BillPaymentDate').datepicker({
        //    dateFormat: 'mm/dd/yy',
        //    numberOfMonths: 1,
        //    changeMonth: true,
        //    changeYear: true
        //});

        $("#tblShowDueBillsList").on("change",
            "input[name=chkPayDueBills]:radio",
            function() {

                T_DuePayment_ID = $(this).closest("tr").find("td:eq(1) input").val();
                $("#btnShowDueBillPaymentWindow").css("visibility", "visible");
                alert(T_DuePayment_ID);
            });

        $("#btnSearch").click(function() {

            if(UnpaidBillsManager.ValidationForSignUpBillsSearch()) {
                table.draw();
                //UnpaidBillsManager.SearchSignUpBillBySearchCriteria();
            }
        });

        //$("#tblSignUpBills").DataTable();

        $("#tblSignUpBills").on("click",
            "#btnPrint",function() {

                window.open("/Report/ShowUnpaidBillReport?TransactionID=" +
                    $(this).closest("tr").find("td:eq(0) input").val() +
                    "");
                //TransactionManager.PrintAchiveBillIndividually();
            });

        $("#btnExportExcel").click(function () {
            UnpaidBillsManager.PrintSignUpBillsList();
        });

        $("#btnPopUpClientUpdateClose, #btnPopUpClose").click(function () {



            $("#chkStatusFromRunningMonth").prop("checked", false);
            $("#chkPackageFromRunningMonth").prop("checked", false);
            $("#tblEmployeeDetails").modal("hide");
            //ClientDetailsID = "";
            //ClientLineStatusID = "";
            //ClientBannedStatusID = "";
            //ClientTransactionID = "";
        });

        $("#closeTblEmployeeDetails").click(function () {

            //ClientDetailsManager.ClearClientDetailsModalInformation();
            $("#chkStatusFromRunningMonth").prop("checked", false);
            $("#chkPackageFromRunningMonth").prop("checked", false);
            $("#Status").css("display", "none");
        });
        $('#PopsLineStatusActiveDate').datepicker({
            dateFormat: 'mm/dd/yy',
            numberOfMonths: 1,
            changeMonth: true,
            changeYear: true
        });

        $("#ContactNumber").keyup(function () {
            var mob = $("#ContactNumber").val();
            $("#SMSCommunication").val(mob);
        });
    });
</script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="panel panel-default">
        <div class="panel-heading">
            <section class="content-header">
                <h6 class="panel-title">SignUp Bills</h6>
                <ol class="breadcrumb">
                    <li><a href="/Transaction/Accounts"><i class="fa fa-dashboard"></i> Archive Bills</a></li>
                    <li class="active"> <a href="/Transaction/ResellerSignUpBills"> SignUp Bills </a> </li>
                </ol>
            </section>
        </div>

        <div class="panel-body">
            @Html.Partial("Partial_Year_Month_Zone")
        </div>
    </div>

    <div class="panel panel-default" style="margin-bottom: 0px">
        <div class="panel-heading">
            <h4 class="panel-title">Sign Up User Details</h4>
        </div>


        <div class="panel-body" style="overflow:auto">
            <div class="row ">
                <div style="float: right; margin-right: 15px;" class="margin15px">
                    @*<input type="button" class="btn btn-success btn-sm" id="btnShowBillPaymentWindow" style="visibility:hidden" value="Bill Pay" />
                        <input type="button" class="btn btn-primary btn-sm" id="btnNewClient" value="New Client" />
                        <input type="button" class="btn btn-primary btn-sm" id="btnUnpaidBills" value="UnPaid Bills" />
                        <input type="button" class="btn btn-primary btn-sm" id="btnNewSignUpBills" value="New SignUp Bills" />*@

                    <input type="button" id="btnExportExcel" class="btn btn-sm btn-primary  btn-sm" value="Export Excel">

                </div>
            </div>
            <table id="tblSignUpBills" class="table table-bordered table-responsive ">
                <thead>
                    <tr>
                        @*<th style="padding:10px;"></th>*@
                        @*<th hidden="hidden"></th>*@
                        <th hidden="hidden"></th>
                        <th style="padding:10px;"> Login_ID</th>
                        <th style="padding-left:100px;padding-right:100px;">Address</th>
                        <th style="padding:10px;">Mobile</th>
                        <th style="padding-left:45px;padding-right:45px;">Zone</th>
                        <th style="padding:10px;">Package</th>
                        <th style="padding:10px;">Fee</th>
                        <th style="padding:10px;">SignUP_Fee</th>
                        <th style="padding:10px;">Time</th>
                        <th style="padding:10px;">Accounts Remarks</th>
                        <th style="padding:10px;">Create Remarks</th>
                        <th style="padding:10px;">Reference</th>
                        <th style="padding:10px;">Given Cable </th>
                        <th style="padding:10px;">Given Items </th>
                        <th style="padding:10px;">Who Create </th>
                        <th style="padding:10px;">Who Assigned </th>
                        @*<th style="padding:10px;">Status_Activate Date</th>*@

                        @* <th style="padding:10px; width: 9%;text-align:center">Action</th>*@
                    </tr>
                </thead>

            </table>
        </div>
    </div>

    <div class="modal fade" id="mdlMakePayment">
        <div class="modal-dialog modal-lg" style="width:65%">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Do You want to pay for this client?</h4>
                </div>
                <div class="modal-body panel-body">
                    @Html.Partial("Partial_Payment");
                </div>
                <div class="modal-footer">
                    @*<button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>*@
                    <div id="PopUp" style="float:right">
                        <input type="button" id="" value="No" class="btn btn-default btn-sm" />
                        <input type="button" id="btnPayBill" value="Yes" class="btn btn-primary btn-sm" />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="tblEmployeeDetails" role="dialog" style="overflow: hidden; overflow-y: scroll;" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-lg" style="width: 65%;margin-bottom:5px;">
            <div class="modal-content">
                <div class="modal-header">
                    <button id="closeTblEmployeeDetails" type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Update Client Information</h4>
                </div>
                <div class="modal-body panel-body">
                    @Html.Partial("Partial_SpecificCLientDetails")
                </div>

                @if ((bool)HttpContext.Current.Session["MikrotikOptionEnable"])
                {
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h6 class="panel-title">Mikrotik</h6>
                        </div>

                        <div class="panel-body">
                            <div class="form-group col-sm-1"></div>
                            <div class="form-group col-sm-6">
                                <div>
                                    @Html.Label("MIkrotik", new { @class = "control-label col-md-0", Style = "float:left" })
                                    <span class="required_field col-md-0" style="padding-left: 5px"> *</span>
                                </div>
                                <div style="clear: both"> </div>
                                <div class="col-md-11" style="padding-left: 0px;">
                                    @Html.DropDownList("lstMikrotik", null, "--Select Mikrotik--", new { @class = "form-control input-sm col-sm-11", @placeholder = " Select Mikrotik " })
                                </div>
                            </div>
                            <div class="form-group col-sm-5">
                                <div>
                                    @Html.Label("IP", new { @class = "control-label col-md-0", Style = "float:left" })
                                    @*<span class="required_field col-md-0" style="padding-left: 5px"> *</span>*@
                                </div>
                                <div style="clear: both"> </div>
                                <div class="col-md-11" style="padding-left: 0px;">
                                    @Html.TextBox("IP", null, new { @class = "form-control input-sm col-sm-11", @placeholder = " 131.33.14.35 " })
                                </div>
                            </div>
                            <div class="form-group col-sm-1"></div>
                            <div class="form-group col-sm-6">
                                <div>
                                    @Html.Label("Mac", new { @class = "control-label col-md-0", Style = "float:left" })
                                    @*<span class="required_field col-md-0" style="padding-left: 5px"> *</span>*@
                                </div>
                                <div style="clear: both"> </div>
                                <div class="col-md-11" style="padding-left: 0px;">
                                    @Html.TextBox("Mac", null, new { @class = "form-control input-sm col-sm-11", @placeholder = " 01:1e:ed:34:45:89 " })
                                </div>
                            </div>
                        </div>

                    </div>
                }
                <div class="modal-footer">
                    @*<button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>*@
                    <div id="PopUpClientUpdate" style="float: right">
                        <input type="button" id="btnPopUpClientUpdateClose" value="Close" class="btn btn-default btn-sm" />
                        @if (ISP_ManagementSystemModel.AppUtils.IsGranted(ISP_ManagementSystemModel.AppUtils.Update_Client_By_Reseller))
                        {
                            <input type="button" id="btnUpdateClientDetails" value="Update Client Information" class="btn btn-primary btn-sm" />
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="popModalForDeletePermently" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    Confirm Submit
                </div>
                <div class="modal-body">
                    Are you sure you want to Delete This Employee Permently?
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <a href="#" id="btnEmployeeDeletePermently" class="btn btn-success success">Delete Employee</a>
                </div>
            </div>
        </div>
    </div>

}
