
@{
    ViewBag.Title = "Transfer Balance";
}

@Html.AntiForgeryToken()
@if (TempData["message"] != null)
{ 
    <text>
    <script>
        AppUtil.ShowError('@TempData["message"].ToString()');
    </script>
</text>
}
<head>
    <style>
        .panel {
            border-radius: 10px;
        }

        .main-form {
            margin: 0px 15px 0px 15px;
        }

        .padding5 {
            padding: 20px 5px 0px 5px;
        }
    </style>
</head>
<div class="col-sm-12">
    <div class="col-md-4 padding5">
        <div class="panel panel-body ">
            <div class="">
                <h4>Add New Transfer</h4>
                <hr />
            </div>
            <div class="form-group col-sm-12">
                <div>
                    @Html.Label("From Account", null, new { @class = "control-label col-md-0", Style = "float:left" })
                    <span class="required_field col-md-0" style="padding-left:5px"> *</span>
                </div>
                <div style="clear:both"> </div>
                <div class="col-md-11" style="padding-left: 0px;">
                    @Html.DropDownList("FromAccountListID", null, "-- Select Account --", new { @class = "form-control col-sm-11", @placeholder = "From Account" })

                </div>
            </div>

            <div class="form-group col-sm-12">
                <div>
                    @Html.Label("To Account", null, new { @class = "control-label col-md-0", Style = "float:left" })
                    <span class="required_field col-md-0" style="padding-left:5px"> *</span>
                </div>
                <div style="clear:both"> </div>
                <div class="col-md-11" style="padding-left: 0px;">
                    @Html.DropDownList("ToAccountListID", null, "-- Select Account --", new { @class = "form-control col-sm-11", @placeholder = "To Account" })

                </div>
            </div>
            <div class="form-group col-sm-12">
                <div>
                    @Html.Label("Date", new { @class = "control-label col-md-0", Style = "float:left" })
                    <span class="required_field col-md-0" style="padding-left:5px"> *</span>
                </div>
                <div style="clear:both"> </div>
                <div class="col-md-11" style="padding-left: 0px;">
                    @Html.TextBox("Date", null, new { @class = "form-control  col-sm-11", @placeholder = " Date " })
                </div>
            </div>
            <div class="form-group col-sm-12">
                <div>
                    @Html.Label("Description", new { @class = "control-label col-md-0", Style = "float:left" })
                    <span class="required_field col-md-0" style="padding-left:5px"> *</span>
                </div>
                <div style="clear:both"> </div>
                <div class="col-md-11" style="padding-left: 0px;">
                    @Html.TextBox("Descriptions", null, new { @class = "form-control   col-sm-11", @placeholder = " Description " })
                </div>
            </div>

            <div class="form-group col-sm-12">
                <div>
                    @Html.Label("Currency", null, new { @class = "control-label col-md-0", Style = "float:left" })
                    <span class="required_field col-md-0" style="padding-left:5px"> *</span>
                </div>
                <div style="clear:both"> </div>
                <div class="col-md-11" style="padding-left: 0px;">
                    @Html.DropDownList("CurrencyID", null, "BDT", new { @disabled = "disabled", @class = "form-control col-sm-11", @placeholder = " Currency " })
                </div>
            </div>
            <div class="form-group col-sm-12">
                <div>
                    @Html.Label("Amount", new { @class = "control-label col-md-0", Style = "float:left" })
                    <span class="required_field col-md-0" style="padding-left:5px"> *</span>
                </div>
                <div style="clear:both"> </div>
                <div class="col-md-11" style="padding-left: 0px;">
                    @Html.TextBox("Amount", null, new { @class = "form-control   col-sm-11", @placeholder = " Amount " })
                </div>
            </div>
            <div class="form-group col-sm-12">
                <div>
                    @Html.Label("Payment Method", new { @class = "control-label col-md-0", Style = "float:left" })
                    <span class="required_field col-md-0" style="padding-left:5px"> *</span>
                </div>
                <div style="clear:both"> </div>
                <div class="col-md-11" style="padding-left: 0px;">
                    @Html.DropDownList("PaymentBy", null, "-- Select Method --", new { @class = "form-control   col-sm-11", @placeholder = " Payment Method" })
                </div>
            </div>
            <div class="form-group col-sm-12">
                <div>
                    @Html.Label("References", new { @class = "control-label col-md-0", Style = "float:left" })
                    <span class="required_field col-md-0" style="padding-left:5px"> *</span>
                </div>
                <div style="clear:both"> </div>
                <div class="col-md-11" style="padding-left: 0px;">
                    @Html.TextBox("References", null, new { @class = "form-control   col-sm-11", @placeholder = " Refereces(Optional) " })
                </div>
            </div>
            <div style="float:right; margin-right: 50px;">
                <input type="button" id="btnAddTransfer" value="Submit" class="btn btn-primary btn-sm" />
            </div>

        </div>
    </div>
    <div class="col-md-8 padding5">
        <div class="panel panel-body">

            <div class="panel-heading" style="padding: 0px 0px;">
                <div class="row" style="margin-left:0px;">
                    <div class="col-sm-6">
                        <div class=""><h4>Recent Transfers:</h4> </div>
                    </div>
                </div>
                <hr />
            </div>
            <div class="panel-body">

                <table id="tblAmountTransfer" class="table table-bordered table-hover table-responsive table-striped" style="align-content: center; width: 100%;">
                    <thead>
                        <tr>
                            <th hidden="hidden"></th>
                            <th>
                                @Html.DisplayName("Date")
                            </th>
                            <th>
                                @Html.DisplayName("From Account")
                            </th>
                            <th>
                                @Html.DisplayName("To Account")
                            </th>
                            <th>
                                @Html.DisplayName("Description")
                            </th>
                            <th>
                                @Html.DisplayName("Ammount")
                            </th>
                        </tr>
                    </thead>

                </table>
            </div>
        </div>

    </div>

</div>
<script src="~/Scripts/CustomScripts/AccountListVsAmountTranferManager.js"></script>
<script>
    var _AccountListVsAmountTransferID;
    var table;
    var index;
    $(document).ready(function () {

        table = $("#tblAmountTransfer").DataTable
            ({
                "language":
                {
                    "processing": "<div class='overlay custom-loader-background'><i class='fa fa-cog fa-spin custom-loader-color'></i></div>"
                },
                "processing": true,
                "serverSide": true,

                "ajax":
                {
                    "url": "/AccountListVsAmountTransfer/GetAllAmountTransferAjaxData",
                    "type": "POST",
                    "dataType": "JSON",
                    data: function (d) {
                        d.__RequestVerificationToken = $('[name=__RequestVerificationToken]').val();
                    }
                },
                //https://stackoverflow.com/questions/11256864/jquery-datatables-actionlink-how-to-add
                "columnDefs": [
                    { "targets": [0], "width": "5%" },
                    { "targets": [0], "data": "AccountListVsAmountTransferID", "render": function (data, type, row, meta) { return "<td hidden><input type='hidden' id='AccountListVsAmountTransferID' name='AccountListVsAmountTransferID' value=" + row.AccountListVsAmountTransferID + "></td>" } },
                    { "targets": [1], "style": "align='center'", "orderable": false, "data": "Action", "render": function (data, type, row, meta) { return AppUtil.ParseDateINMMDDYYYY(row.TransferDate) } },
                    { "targets": [4], "style": "align='center'", "orderable": false, "data": "Action", "render": function (data, type, row, meta) { return row.UpdateTansfer === true ? '<a href="/AccountListVsAmountTransfer/Manage/' + row.AccountListVsAmountTransferID + '" >' + row.Description + '</a>' : '<td>' + row.Description + '</td>' } },
                ],
                "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                    $(nRow).find("td:eq(0)").attr("hidden", true);
                    return nRow;
                },

                "columns": [
                    {
                        "data": ""
                    },
                    {
                        "data": ""
                    },
                    {
                        "data": "FromAccount"
                    },
                    {
                        "data": "ToAccount"
                    },
                    {
                        "data": "Description"
                    },
                    {
                        "data": "Amount"
                    },
                ]
            });
        $("#Amount").change(function () {
            debugger;
            var AmountForCheck = $("#Amount").val();
            var AccountID = $("#FromAccountListID").val();
            var AmountCheckDetails = { FromAccountID: AccountID, TransferAmount: AmountForCheck };
            var AntiForgeryToken = $("input[name='__RequestVerificationToken']").val();
            var header = {};
            header['__RequestVerificationToken'] = AntiForgeryToken;

            $.ajax({
                type: "POST",
                url: "/AccountListVsAmountTransfer/InsertAmountCheck",
                data: JSON.stringify({ amountforchecking: AmountCheckDetails }),
                dataType: "json",
                cache: false,
                headers: header,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.InsufficientBalance === true) {
                        AppUtil.ShowErrorOnControl("Insufficient Balance!", "Amount", "top center");
                    }
                    else {

                    }
                }

            });
        });
        $("#ToAccountListID").change(function () {
            debugger;
            var FromAccountID = $("#FromAccountListID").val();
            var ToAccountID = $("#ToAccountListID").val();
            if (FromAccountID == ToAccountID) {
                AppUtil.ShowErrorOnControl("You can not transfer in the same account!", "ToAccountListID", "top center");
                $("#ToAccountListID").val("");
            }
            else {

            }
           
        });


        $('#Date').datepicker({
            dateFormat: 'mm/dd/yy',
            numberOfMonths: 1,
            changeMonth: true,
            changeYear: true
        });


        $("#btnAddTransfer").click(function (e) {
            if (AccountListVsAmountTransferManager.CreateValidation() === true) {
                AccountListVsAmountTransferManager.InsertAccountListVsAmountTransfer();
            }
        });

    });

</script>